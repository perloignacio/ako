
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 13/5/2022 - 02:18 p.Â m.
// This is a partial class file. The other one is ContactosConsultasEntity.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using crmRules.Objects;



using Cooperator.Framework.Core;
using Cooperator.Framework.Core.LazyLoad;
using System;

namespace crmRules.Entities
{

    /// <summary>
    /// 
    /// </summary>
    public partial class ContactosConsultas : Objects.ContactosConsultasObject, IMappeableContactosConsultas, IEquatable<ContactosConsultas>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public ContactosConsultas()
            :base()
        {
            if (_ContactosEntity == null) _ContactosEntity = new Entities.Contactos();

        }

        /// <summary>
        /// 
        /// </summary>
        public ContactosConsultas(
			System.Int32 IdConsulta)
            : base()
        {

			_IdConsulta = IdConsulta;

            if (_ContactosEntity == null) _ContactosEntity = new Entities.Contactos();

            Initialized();
        }

        

        /// <summary>
        /// 
        /// </summary>
        public ContactosConsultas(
			System.Int32 IdConsulta,
			System.DateTime Fecha,
			System.Int32 IdContacto,
			System.Decimal Gli_volumen,
			System.Decimal Gli_dureza,
			System.Decimal Gli_costo,
			System.Decimal Gli_dosis,
			System.Decimal Gli_porinactivacion,
			System.Decimal Gli_valinactivacion,
			System.Decimal Gli_perdida,
			System.Decimal Gli_villaseca,
			System.Decimal Corr_volumen,
			System.Decimal Corr_litros,
			System.Decimal Corr_cantidad,
			System.Decimal Corr_costoeco,
			System.Decimal Corr_hectareas,
			System.Decimal Corr_canthec,
			System.Decimal Corr_costohec,
			System.Decimal totalesta,
			System.Decimal totalako)
            : base()
        {

			_IdConsulta = IdConsulta;
			_Fecha = Fecha;
			_IdContacto = IdContacto;
			_Gli_volumen = Gli_volumen;
			_Gli_dureza = Gli_dureza;
			_Gli_costo = Gli_costo;
			_Gli_dosis = Gli_dosis;
			_Gli_porinactivacion = Gli_porinactivacion;
			_Gli_valinactivacion = Gli_valinactivacion;
			_Gli_perdida = Gli_perdida;
			_Gli_villaseca = Gli_villaseca;
			_Corr_volumen = Corr_volumen;
			_Corr_litros = Corr_litros;
			_Corr_cantidad = Corr_cantidad;
			_Corr_costoeco = Corr_costoeco;
			_Corr_hectareas = Corr_hectareas;
			_Corr_canthec = Corr_canthec;
			_Corr_costohec = Corr_costohec;
			_totalesta = totalesta;
			_totalako = totalako;

            if (_ContactosEntity == null) _ContactosEntity = new Entities.Contactos();

            Initialized();
        }
        
        #endregion

        #region "Fields"

        /// <summary>
/// 
/// </summary>
protected Entities.Contactos _ContactosEntity;

        #endregion

        #region "Properties"
        
bool _ContactosEntityFetched;

        /// <summary>
        /// 
        /// </summary>
        public virtual Entities.Contactos ContactosEntity
        {
            get
            {
                if (_ContactosEntity== null  && ! _ContactosEntityFetched ) {
_ContactosEntityFetched = true;
Entities.Contactos _ContactosEntityTemp = new Entities.Contactos(this.IdContacto); 
ILazyProvider lazyProvider = LazyProviderFactory.Get(typeof(Entities.Contactos));
 _ContactosEntity = lazyProvider.GetEntity(typeof(Entities.Contactos), _ContactosEntityTemp) as Entities.Contactos;
}

                return _ContactosEntity;
            }
            set
            {
                base.PropertyModified();
                _ContactosEntity = value;
                if (value != null) {
   _IdContacto = value.IdContacto;

} else {
   _IdContacto = System.Int32.MinValue;

}

            }
        }
        
        #endregion

        /// <summary>
        /// Returns de original value of entity since was created or restored.
        /// </summary>
        public new ContactosConsultas OriginalValue()
        {
            return (ContactosConsultas)base.OriginalValue();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            ContactosConsultas newObject;            
            

            newObject = (ContactosConsultas)this.MemberwiseClone();
            // Entities
                         
            if (this._ContactosEntity != null)
            {
                newObject._ContactosEntity = (Entities.Contactos)((ICloneable)this._ContactosEntity).Clone();
            }
            
            // Colections
            
            // OriginalValue
            ContactosConsultas newOriginalValue;
            if (base._OriginalValue != null)
            {
                newOriginalValue = (ContactosConsultas)this.OriginalValue().MemberwiseClone();
                // Entities
                             
                if (this.OriginalValue()._ContactosEntity != null)
                {
                    newOriginalValue._ContactosEntity = (Entities.Contactos)((ICloneable)this.OriginalValue()._ContactosEntity).Clone();
                }
                
                // Colections
                            
                newObject._OriginalValue = newOriginalValue;

            }
            return newObject;            
        }



        /// <summary>
        /// 
        /// </summary>
        void IMappeableContactosConsultas.CompleteEntity(Entities.Contactos ContactosEntity)
        {
        _ContactosEntity = ContactosEntity;
        }
        
        bool IMappeableContactosConsultas.IsContactosEntityNull()
        {
            return (_ContactosEntity == null);
        }
        

        /// <summary>
        /// 
        /// </summary>
        void IMappeableContactosConsultas.SetFKValuesForChilds(ContactosConsultas entity)
        {
                
        }

        /// <summary>
        /// 
        /// </summary>
        public bool Equals(ContactosConsultas other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        } 

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableContactosConsultas
    {
        /// <summary>
        /// 
        /// </summary>
        void CompleteEntity(Entities.Contactos ContactosEntity);
        
        /// <summary>
        /// 
        /// </summary>
        bool IsContactosEntityNull();
        
        /// <summary>
        /// 
        /// </summary>
        void SetFKValuesForChilds(ContactosConsultas entity);
    }

        /// <summary>
        /// 
        /// </summary>
    public partial class ContactosConsultasList : ObjectList<ContactosConsultas>
    {
    }
}
namespace crmRules.Views
{
        /// <summary>
        /// 
        /// </summary>
    public partial class ContactosConsultasListView
        : ObjectListView<Entities.ContactosConsultas>
    {
        /// <summary>
        /// 
        /// </summary>
        public ContactosConsultasListView(Entities.ContactosConsultasList list): base(list)
        {
        }
    }
}


