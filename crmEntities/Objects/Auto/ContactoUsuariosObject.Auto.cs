
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 22/4/2022 - 03:14 p.Â m.
// This is a partial class file. The other one is ContactoUsuariosObject.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using Cooperator.Framework.Core;
using System;

namespace crmRules.Objects
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ContactoUsuariosObject : BaseObject, IMappeableContactoUsuariosObject, IUniqueIdentifiable, IEquatable<ContactoUsuariosObject>, ICloneable
    {

        #region "Ctor"

        /// <summary>
        /// 
        /// </summary>
        public ContactoUsuariosObject(): base()
        {

			_IdUsuario =  ValuesGenerator.GetInt32;

        }

        /// <summary>
        /// 
        /// </summary>
        public ContactoUsuariosObject(
			System.Int32 IdUsuario): base()
        {

			_IdUsuario = IdUsuario;

            Initialized();
        }

        
        /// <summary>
        /// 
        /// </summary>
        public ContactoUsuariosObject(
			System.Int32 IdUsuario,
			System.String Nombre,
			System.String Apellido,
			System.String Email,
			System.String Telefono,
			System.String Usuario,
			System.String Contra,
			System.Int32 IdTipoUsuario,
			System.Boolean Activo): base()
        {

			_IdUsuario = IdUsuario;
			_Nombre = Nombre;
			_Apellido = Apellido;
			_Email = Email;
			_Telefono = Telefono;
			_Usuario = Usuario;
			_Contra = Contra;
			_IdTipoUsuario = IdTipoUsuario;
			_Activo = Activo;

            Initialized();
        }
        

        #endregion

        #region "Events"
        
        
        #endregion

        #region "Fields"

            /// <summary>
/// 
/// </summary>
protected System.Int32 _IdUsuario;
/// <summary>
/// 
/// </summary>
protected System.String _Nombre;
/// <summary>
/// 
/// </summary>
protected System.String _Apellido;
/// <summary>
/// 
/// </summary>
protected System.String _Email;
/// <summary>
/// 
/// </summary>
protected System.String _Telefono;
/// <summary>
/// 
/// </summary>
protected System.String _Usuario;
/// <summary>
/// 
/// </summary>
protected System.String _Contra;
/// <summary>
/// 
/// </summary>
protected System.Int32 _IdTipoUsuario;
/// <summary>
/// 
/// </summary>
protected System.Boolean _Activo;

        #endregion

        #region "Properties"
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 IdUsuario
        {
            get
            {
                return _IdUsuario;
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Nombre
        {
            get
            {
                return _Nombre;
            }
            
            set
            {
                base.PropertyModified();
                _Nombre = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Apellido
        {
            get
            {
                return _Apellido;
            }
            
            set
            {
                base.PropertyModified();
                _Apellido = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Email
        {
            get
            {
                return _Email;
            }
            
            set
            {
                base.PropertyModified();
                _Email = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Telefono
        {
            get
            {
                return _Telefono;
            }
            
            set
            {
                base.PropertyModified();
                _Telefono = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Usuario
        {
            get
            {
                return _Usuario;
            }
            
            set
            {
                base.PropertyModified();
                _Usuario = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.String Contra
        {
            get
            {
                return _Contra;
            }
            
            set
            {
                base.PropertyModified();
                _Contra = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Int32 IdTipoUsuario
        {
            get
            {
                return _IdTipoUsuario;
            }
            
            set
            {
                base.PropertyModified();
                _IdTipoUsuario = value;
                
            }
            
        }
        
        /// <summary>
        /// 
        /// </summary>
        public virtual System.Boolean Activo
        {
            get
            {
                return _Activo;
            }
            
            set
            {
                base.PropertyModified();
                _Activo = value;
                
            }
            
        }
        
        #endregion

        
            
                
        /// <summary>
        /// 
        /// </summary>
        protected override void SetOriginalValue()
        {
            base._OriginalValue = (IObject) this.MemberwiseClone();
        }

        /// <summary>
        /// 
        /// </summary>
        object ICloneable.Clone()
        {
            ContactoUsuariosObject newObject;
            ContactoUsuariosObject newOriginalValue;

            newObject = (ContactoUsuariosObject) this.MemberwiseClone();
            if (base._OriginalValue != null)
            {
                newOriginalValue = (ContactoUsuariosObject)this.OriginalValue().MemberwiseClone();
                newObject._OriginalValue = newOriginalValue;
            }
            return newObject;
        }


        /// <summary>
        /// Returns de original value of object since was created or restored.
        /// </summary>
        public new ContactoUsuariosObject OriginalValue()
        {
            return (ContactoUsuariosObject)base.OriginalValue();
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableContactoUsuariosObject.HydrateFields(
			System.Int32 IdUsuario,
			System.String Nombre,
			System.String Apellido,
			System.String Email,
			System.String Telefono,
			System.String Usuario,
			System.String Contra,
			System.Int32 IdTipoUsuario,
			System.Boolean Activo)
        {
        _IdUsuario = IdUsuario;
_Nombre = Nombre;
_Apellido = Apellido;
_Email = Email;
_Telefono = Telefono;
_Usuario = Usuario;
_Contra = Contra;
_IdTipoUsuario = IdTipoUsuario;
_Activo = Activo;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableContactoUsuariosObject.GetFieldsForInsert()
        {
            object[] _myArray = new object[9];
            _myArray[0] = _IdUsuario;
_myArray[1] = _Nombre;
_myArray[2] = _Apellido;
if (!System.String.IsNullOrEmpty(_Email)) _myArray[3] = _Email;
if (!System.String.IsNullOrEmpty(_Telefono)) _myArray[4] = _Telefono;
_myArray[5] = _Usuario;
_myArray[6] = _Contra;
_myArray[7] = _IdTipoUsuario;
_myArray[8] = _Activo;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableContactoUsuariosObject.GetFieldsForUpdate()
        {
            
            object[] _myArray = new object[9];
            _myArray[0] = _IdUsuario;
_myArray[1] = _Nombre;
_myArray[2] = _Apellido;
if (!System.String.IsNullOrEmpty(_Email)) _myArray[3] = _Email;
if (!System.String.IsNullOrEmpty(_Telefono)) _myArray[4] = _Telefono;
_myArray[5] = _Usuario;
_myArray[6] = _Contra;
_myArray[7] = _IdTipoUsuario;
_myArray[8] = _Activo;

            return _myArray;
        }

        /// <summary>
        /// 
        /// </summary>
        object[] IMappeableContactoUsuariosObject.GetFieldsForDelete()
        {
            
            object[] _myArray = new object[1];
            _myArray[0] = _IdUsuario;

            return _myArray;
        }


        /// <summary>
        /// 
        /// </summary>
        void IMappeableContactoUsuariosObject.UpdateObjectFromOutputParams(object[] parameters){
            // Update properties from Output parameters
            _IdUsuario = (System.Int32) parameters[0];

        }


        /// <summary>
        /// 
        /// </summary>
        object[] IUniqueIdentifiable.Identifier()
        {
            ContactoUsuariosObject o = null;
            if (ObjectStateHelper.IsModified(this))
                o = this.OriginalValue();
            else
                o = this;

            return new object[]
            {o.IdUsuario};
        }


        /// <summary>
        /// 
        /// </summary>
        public bool Equals(ContactoUsuariosObject other)
        {
            return UniqueIdentifierHelper.IsSameObject((IUniqueIdentifiable)this, (IUniqueIdentifiable)other);
        }

    }

    /// <summary>
    /// 
    /// </summary>
    public interface IMappeableContactoUsuariosObject
    {
        /// <summary>
        /// 
        /// </summary>
        void HydrateFields(System.Int32 IdUsuario, 
			System.String Nombre, 
			System.String Apellido, 
			System.String Email, 
			System.String Telefono, 
			System.String Usuario, 
			System.String Contra, 
			System.Int32 IdTipoUsuario, 
			System.Boolean Activo);

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForInsert();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForUpdate();

        /// <summary>
        /// 
        /// </summary>
        object[] GetFieldsForDelete();

        /// <summary>
        /// 
        /// </summary>
        void UpdateObjectFromOutputParams(object[] parameters);
    }

    /// <summary>
    /// 
    /// </summary>
    public partial class ContactoUsuariosObjectList : ObjectList<ContactoUsuariosObject>
    {
    }
}

namespace crmRules.Views
{
    /// <summary>
    /// 
    /// </summary>
    public partial class ContactoUsuariosObjectListView
        : ObjectListView<Objects.ContactoUsuariosObject>
    {
        /// <summary>
        /// 
        /// </summary>
        public ContactoUsuariosObjectListView(Objects.ContactoUsuariosObjectList list): base(list)
        {
        }
    }
}


