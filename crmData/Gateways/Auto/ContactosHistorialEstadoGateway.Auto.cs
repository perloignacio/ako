
//------------------------------------------------------------------------------
// This file was generated by Cooperator Modeler, version 1.3.2.0
// Created: 29/4/2022 - 06:52 p.Â m.
// This is a partial class file. The other one is ContactosHistorialEstadoGateway.cs
// You should not modifiy this file, please edit the other partial class file.
//------------------------------------------------------------------------------

using System;
using crmRules.Objects;
using Cooperator.Framework.Data;
using Cooperator.Framework.Data.Exceptions;
using Cooperator.Framework.Core;
using System.Data;
using System.Data.Common;
using System.Reflection;
using System.Web;




namespace crmRules.Gateways
{

    public partial class ContactosHistorialEstadoGateway : BaseGateway<ContactosHistorialEstadoObject, ContactosHistorialEstadoObjectList>, IGenericGateway
    {

        #region "Singleton"

        static ContactosHistorialEstadoGateway _instance;

        private ContactosHistorialEstadoGateway()
        {
        }

        /// <summary>
        /// 
        /// </summary>
        
        
        public static ContactosHistorialEstadoGateway Instance() {
            if (_instance == null) {
                if (HttpContext.Current == null) 
                    _instance = new ContactosHistorialEstadoGateway();
                else {
                    ContactosHistorialEstadoGateway inst = HttpContext.Current.Items["crmRules.ContactosHistorialEstadoGatewaySingleton"] as ContactosHistorialEstadoGateway;
                    if (inst == null) {
                        inst = new ContactosHistorialEstadoGateway();
                        HttpContext.Current.Items.Add("crmRules.ContactosHistorialEstadoGatewaySingleton", inst);
                    }
                    return inst;
                }
            }
            return _instance;
        }

        #endregion

        /// <summary>
        /// Return the mapped table name
        /// </summary>
        protected override string TableName
        {
            get { return "ContactosHistorialEstado"; }
        }

        protected override string RuleName
        {
            get {return typeof(ContactosHistorialEstadoGateway).FullName;}
        }


        

        /// <summary>
        /// Assign properties values based on DataReader
        /// </summary>
        protected override void HydrateFields(DbDataReader reader, ContactosHistorialEstadoObject entity)
        {
            
            IMappeableContactosHistorialEstadoObject ContactosHistorialEstado = (IMappeableContactosHistorialEstadoObject)entity;
            ContactosHistorialEstado.HydrateFields(
            reader.GetInt32(0),
reader.GetInt32(1),
reader.GetInt32(2),
reader.GetInt32(3),
reader.GetDateTime(4));
            ((IObject)entity).State = ObjectState.Restored;
        }

        /// <summary>
        /// Get field values to call insertion stored procedure
        /// </summary>
        protected override object[] GetFieldsForInsert(ContactosHistorialEstadoObject entity)
        {

            IMappeableContactosHistorialEstadoObject ContactosHistorialEstado = (IMappeableContactosHistorialEstadoObject)entity;
            return ContactosHistorialEstado.GetFieldsForInsert();
        }

        /// <summary>
        /// Get field values to call update stored procedure
        /// </summary>
        protected override object[] GetFieldsForUpdate(ContactosHistorialEstadoObject entity)
        {

            IMappeableContactosHistorialEstadoObject ContactosHistorialEstado = (IMappeableContactosHistorialEstadoObject)entity;
            return ContactosHistorialEstado.GetFieldsForUpdate();
        }

        /// <summary>
        /// Get field values to call deletion stored procedure
        /// </summary>
        protected override object[] GetFieldsForDelete(ContactosHistorialEstadoObject entity)
        {

            IMappeableContactosHistorialEstadoObject ContactosHistorialEstado = (IMappeableContactosHistorialEstadoObject)entity;
            return ContactosHistorialEstado.GetFieldsForDelete();
        }

        /// <summary>
        /// Raised after insert and update. Update properties from Output parameters
        /// </summary>
        protected override void UpdateObjectFromOutputParams(ContactosHistorialEstadoObject row, object[] parameters)
        {
            ((IMappeableContactosHistorialEstadoObject) row).UpdateObjectFromOutputParams(parameters);
            ((IObject)row).State = ObjectState.Restored;
        }

        /// <summary>
        /// StoredProceduresPrefix, for example: coop_
        /// </summary>
        protected override string StoredProceduresPrefix()
        {
            return "coop_";
        }


        /// <summary>
        /// Get a ContactosHistorialEstadoObject by execute a SQL Query Text
        /// </summary>
        public ContactosHistorialEstadoObject GetOneBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectBySQLText(sqlQueryText);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by execute a SQL Query Text
        /// </summary>
        public ContactosHistorialEstadoObjectList GetBySQLQuery(string sqlQueryText)
        {
            return base.GetObjectListBySQLText(sqlQueryText);
        }


        /// <summary>
        /// Get a ContactosHistorialEstadoObject by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObject GetOne(System.Int32 IdHistorialEstadoContacto)
        {
            return base.GetOne(new ContactosHistorialEstadoObject(IdHistorialEstadoContacto));
        }


        // GetBy Objects and Params
            


        

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactos(DbTransaction transaction,System.Int32 IdContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactos", IdContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactos(DbTransaction transaction, IUniqueIdentifiable Contactos)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactos", Contactos.Identifier());
        }

    

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactosEstados(DbTransaction transaction,System.Int32 IdEstadoContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactosEstados", IdEstadoContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactosEstados(DbTransaction transaction, IUniqueIdentifiable ContactosEstados)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactosEstados", ContactosEstados.Identifier());
        }

    

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactoUsuarios(DbTransaction transaction,System.Int32 IdUsuarioContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactoUsuarios", IdUsuarioContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactoUsuarios(DbTransaction transaction, IUniqueIdentifiable ContactoUsuarios)
        {
            return base.GetObjectListByAnyStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactoUsuarios", ContactoUsuarios.Identifier());
        }

    

        

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactos(System.Int32 IdContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactos", IdContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactos(IUniqueIdentifiable Contactos)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactos", Contactos.Identifier());
        }

    

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactosEstados(System.Int32 IdEstadoContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactosEstados", IdEstadoContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactosEstados(IUniqueIdentifiable ContactosEstados)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactosEstados", ContactosEstados.Identifier());
        }

    

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactoUsuarios(System.Int32 IdUsuarioContacto)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactoUsuarios", IdUsuarioContacto);
        }

        /// <summary>
        /// Get a ContactosHistorialEstadoObjectList by calling a Stored Procedure
        /// </summary>
        public ContactosHistorialEstadoObjectList GetByContactoUsuarios(IUniqueIdentifiable ContactoUsuarios)
        {
            return base.GetObjectListByAnyStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_GetByContactoUsuarios", ContactoUsuarios.Identifier());
        }

    

        /// <summary>
        /// Delete ContactosHistorialEstado
        /// </summary>
        public void Delete(System.Int32 IdHistorialEstadoContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_Delete", IdHistorialEstadoContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado
        /// </summary>
        public void Delete(DbTransaction transaction, System.Int32 IdHistorialEstadoContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_Delete", IdHistorialEstadoContacto);
        }

            

        

        /// <summary>
        /// Delete ContactosHistorialEstado by Contactos
        /// </summary>
        public void DeleteByContactos(System.Int32 IdContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactos", IdContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by Contactos
        /// </summary>
        public void DeleteByContactos(DbTransaction transaction, System.Int32 IdContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactos", IdContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by Contactos
        /// </summary>
        public void DeleteByContactos(IUniqueIdentifiable Contactos)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactos", Contactos.Identifier());
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by Contactos
        /// </summary>
        public void DeleteByContactos(DbTransaction transaction, IUniqueIdentifiable Contactos)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactos", Contactos.Identifier());
        }


    

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactosEstados
        /// </summary>
        public void DeleteByContactosEstados(System.Int32 IdEstadoContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactosEstados", IdEstadoContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactosEstados
        /// </summary>
        public void DeleteByContactosEstados(DbTransaction transaction, System.Int32 IdEstadoContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactosEstados", IdEstadoContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactosEstados
        /// </summary>
        public void DeleteByContactosEstados(IUniqueIdentifiable ContactosEstados)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactosEstados", ContactosEstados.Identifier());
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactosEstados
        /// </summary>
        public void DeleteByContactosEstados(DbTransaction transaction, IUniqueIdentifiable ContactosEstados)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactosEstados", ContactosEstados.Identifier());
        }


    

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactoUsuarios
        /// </summary>
        public void DeleteByContactoUsuarios(System.Int32 IdUsuarioContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactoUsuarios", IdUsuarioContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactoUsuarios
        /// </summary>
        public void DeleteByContactoUsuarios(DbTransaction transaction, System.Int32 IdUsuarioContacto)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactoUsuarios", IdUsuarioContacto);
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactoUsuarios
        /// </summary>
        public void DeleteByContactoUsuarios(IUniqueIdentifiable ContactoUsuarios)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactoUsuarios", ContactoUsuarios.Identifier());
        }

        /// <summary>
        /// Delete ContactosHistorialEstado by ContactoUsuarios
        /// </summary>
        public void DeleteByContactoUsuarios(DbTransaction transaction, IUniqueIdentifiable ContactoUsuarios)
        {
            base.DataBaseHelper.ExecuteNoQueryByStoredProcedure(transaction, StoredProceduresPrefix() + "ContactosHistorialEstado_DeleteByContactoUsuarios", ContactoUsuarios.Identifier());
        }


    


        //Database Queries 
        



        #region IGenericGateway

        object IGenericGateway.GetOne(IUniqueIdentifiable identifier)
        {
            return base.GetOne(identifier);
        }

        object IGenericGateway.GetAll()
        {
            return base.GetAll();
        }

        object IGenericGateway.GetByParent(IUniqueIdentifiable parentEntity)
        {
            return base.GetByParent(parentEntity);
        }

        #endregion


    }

}








